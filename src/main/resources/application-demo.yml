logging:
  handler:
    output: file
    pattern: '/opt/demo/log/demo.log'
    limit: 5242880
    count: 3
    level: FINE
  level:
    all: ALL
    java:          WARNING
    javax.xml:     WARNING
    com.sun:       WARNING
    sun.net:       WARNING
    sun.util:      WARNING
    org.apache:    OFF
    org.jboss:     WARNING
    org.hibernate: WARNING
    org.eclipse:   WARNING
    net.tiny:      FINE

#
main: ${launcher.ws}, ${launcher.db}
#shutdown = ${hook}
daemon: true
executor: ${pool}
callback: ${service.context}
pool:
  class:   net.tiny.service.PausableThreadPoolExecutor
  size:    10
  max:     20
  timeout: 3
launcher:
  ws:
    class: net.tiny.ws.Launcher
    builder:
      port: 8080
#     bind: 192.168.1.1
      backlog: 10
      stopTimeout: 1
      executor: ${pool}
      handlers: ${handler.resource}, ${handler.sys}, ${handler.rest}, ${handler.api}, ${handler.ui}
#      ssl:
#        file:       ks
#        password:   12345
#        clientAuth: false
  db:
    class: net.tiny.db.Launcher
    builder:
      port: 9092
      base: /opt/demo/data
      name: h2
      user:     sa
      password: sa
      create:   false
      allow:    true
      batch:    true
      clear:    false
#      script:  /opt/demo/sql/create_sequence.sql
#      load:    /opt/demo/csv
#      producer: ${jpa.producer}

handler:
  resource:
    class:     net.tiny.ws.ResourceHttpHandler
    cacheSize: 100
#    maxAge:    0
    internal:  false
    path:      /
    paths:     /:/opt/demo/home/
    filters:   ${filter.logger}, ${filter.cors}
#
  sys:
    class:   net.tiny.ws.ControllableHandler
    path:    /sys
    auth:    ${auth.simple}
#    auth:    ${auth.server}
    filters: ${filter.logger}
    context: ${service.context}
#
  rest:
    class:     net.tiny.ws.rs.RestfulHttpHandler
    path:      /home
    filters:   ${filter.logger}
    context:   ${service.context}
    renderer : ${renderer.html}
    listener:  ${rest.monitor}
  api:
    class:     net.tiny.ws.rs.RestfulHttpHandler
    path:      /api
    filters:   ${filter.jpa}, ${filter.jwt}, ${filter.logger}
    context:   ${service.context}
    listener:  ${rest.monitor}
  ui:
    class:     net.tiny.ws.rs.RestfulHttpHandler
    path:      /ui
    filters:   ${filter.logger}, ${filter.jpa}
    context:   ${service.context}
    renderer : ${renderer.html}
    listener:  ${rest.monitor}
#
filter:
   logger:
     class: net.tiny.ws.AccessLogger
     out:   /opt/demo/log/access.log
   cors:
     class: net.tiny.ws.CorsResponseFilter
   snap:
     class: net.tiny.ws.SnapFilter
   jpa:
     class: net.tiny.dao.HttpTransactionFilter
     producer: ${jpa.producer}
   jwt:
     class: net.tiny.feature.demo.auth.JsonWebTokenFilter
     pattern: /api/v1/setting/.*, !/api/v1/auth/.*
#
auth:
#
  simple:
    class:    net.tiny.ws.auth.SimpleAuthenticator
    token:    DES:CAhQn4bV:HIOsSQIg
    encode:   true
    username: paas
# 'password'
    password: Piz5wX49L4MS4SYsGwEMNw==
  server:
     class:   net.tiny.ws.auth.ServerAuthenticator
     service: ${service.account}
#
service:
  account:
    class: net.tiny.ws.auth.AccountService
    path:  /opt/demo/jaas/passwd
#
rest:
  application:
    class:   net.tiny.ws.rs.RestApplication
    pattern: net.tiny.message.*, net.tiny.feature.*
    scan:    .*/tiny-.*[.]jar, .*/feature-.*[.]jar, !.*/feature-entity.*[.]jar, !.*/tiny-dic.*[.]jar
    loggingLevel: info
  monitor:
    class: net.tiny.ws.rs.RestServiceLocator$RestServiceMonitor
#
service:
  context:
    class: net.tiny.ws.rs.RestServiceLocator
#
jpa:
  producer:
    class: net.tiny.dao.EntityManagerProducer
    profile: local
    level: INFO

#
renderer:
  html:
    class:  net.tiny.ws.mvc.HtmlRenderer
    parser: ${template.parser}
    cache:  ${content.cache}
#
template:
  parser:
    class: net.tiny.ws.mvc.TemplateParser
    path: webapp
    cache: ${content.cache}
#
content:
  cache:
    class: net.tiny.ws.cache.CacheFunction
    size: 10
#
vcap:
  alias: vcap.services.ups-tiny.credentials
#datasource:
#  global:
#    username: ${${vcap.alias}.cf.username}
#    password: ${${vcap.alias}.cf.password}
#
res:
  editor:
    class: net.tiny.feature.web.PropertiesEditor
    path:  /opt/demo/i18n
image:
  fas:
    class:     net.tiny.feature.demo.BrandImage
    cacheSize: 100
#    maxAge: 86400
#    path: /home/fontawesome-free-5.11.2-web
